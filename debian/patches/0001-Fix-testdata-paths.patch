From: Daniel Swarbrick <dswarbrick@debian.org>
Date: Fri, 28 Jul 2023 22:28:21 +0200
Subject: Fix testdata paths

Forwarded: not-needed
Last-Update: 2022-09-05

'go test' changes the working directory to that of the Go package being
tested, and thus if we are using a shared testdata directory outside of
that package, we need to make the paths relative again.
---
 bcache/get_test.go        |  2 +-
 blockdevice/stats_test.go | 10 +++++-----
 btrfs/get_test.go         |  2 +-
 internal/fs/fs_test.go    |  2 +-
 iscsi/get_test.go         | 26 +++++++++++++-------------
 sysfs/fs_test.go          |  2 +-
 xfs/parse_test.go         |  2 +-
 xfs/xfs_test.go           |  4 ++--
 8 files changed, 25 insertions(+), 25 deletions(-)

diff --git a/bcache/get_test.go b/bcache/get_test.go
index aa0b3d9..ceb0ced 100644
--- a/bcache/get_test.go
+++ b/bcache/get_test.go
@@ -19,7 +19,7 @@ import (
 )
 
 func TestFSBcacheStats(t *testing.T) {
-	bcache, err := NewFS("testdata/fixtures/sys")
+	bcache, err := NewFS("../testdata/fixtures/sys")
 	if err != nil {
 		t.Fatalf("failed to access bcache fs: %v", err)
 	}
diff --git a/blockdevice/stats_test.go b/blockdevice/stats_test.go
index c065c29..3e070bb 100644
--- a/blockdevice/stats_test.go
+++ b/blockdevice/stats_test.go
@@ -21,8 +21,8 @@ import (
 
 const (
 	failMsgFormat  = "%v, expected %v, actual %v"
-	procfsFixtures = "testdata/fixtures/proc"
-	sysfsFixtures  = "testdata/fixtures/sys"
+	procfsFixtures = "../testdata/fixtures/proc"
+	sysfsFixtures  = "../testdata/fixtures/sys"
 )
 
 func TestDiskstats(t *testing.T) {
@@ -65,7 +65,7 @@ func TestDiskstats(t *testing.T) {
 }
 
 func TestBlockDevice(t *testing.T) {
-	blockdevice, err := NewFS("testdata/fixtures/proc", "testdata/fixtures/sys")
+	blockdevice, err := NewFS("../testdata/fixtures/proc", "../testdata/fixtures/sys")
 	if err != nil {
 		t.Fatalf("failed to access blockdevice fs: %v", err)
 	}
@@ -155,7 +155,7 @@ func TestBlockDevice(t *testing.T) {
 }
 
 func TestBlockDmInfo(t *testing.T) {
-	blockdevice, err := NewFS("testdata/fixtures/proc", "testdata/fixtures/sys")
+	blockdevice, err := NewFS("../testdata/fixtures/proc", "../testdata/fixtures/sys")
 	if err != nil {
 		t.Fatalf("failed to access blockdevice fs: %v", err)
 	}
@@ -199,7 +199,7 @@ func TestBlockDmInfo(t *testing.T) {
 }
 
 func TestSysBlockDeviceUnderlyingDevices(t *testing.T) {
-	blockdevice, err := NewFS("testdata/fixtures/proc", "testdata/fixtures/sys")
+	blockdevice, err := NewFS("../testdata/fixtures/proc", "../testdata/fixtures/sys")
 	if err != nil {
 		t.Fatalf("failed to access blockdevice fs: %v", err)
 	}
diff --git a/btrfs/get_test.go b/btrfs/get_test.go
index 23059c6..c258263 100644
--- a/btrfs/get_test.go
+++ b/btrfs/get_test.go
@@ -28,7 +28,7 @@ type alloc struct {
 }
 
 func TestFSBtrfsStats(t *testing.T) {
-	btrfs, err := NewFS("testdata/fixtures/sys")
+	btrfs, err := NewFS("../testdata/fixtures/sys")
 	if err != nil {
 		t.Fatalf("failed to access Btrfs filesystem: %v", err)
 	}
diff --git a/internal/fs/fs_test.go b/internal/fs/fs_test.go
index 559ceff..1e3267d 100644
--- a/internal/fs/fs_test.go
+++ b/internal/fs/fs_test.go
@@ -16,7 +16,7 @@ package fs
 import "testing"
 
 const (
-	sysTestFixtures = "testdata/fixtures/sys"
+	sysTestFixtures = "../../testdata/fixtures/sys"
 )
 
 func TestNewFS(t *testing.T) {
diff --git a/iscsi/get_test.go b/iscsi/get_test.go
index 86e34ea..fdaa757 100644
--- a/iscsi/get_test.go
+++ b/iscsi/get_test.go
@@ -30,12 +30,12 @@ func TestGetStats(t *testing.T) {
 				Tpgt: []iscsi.TPGT{
 					{
 						Name:     "tpgt_1",
-						TpgtPath: "testdata/fixtures/sys/kernel/config/target/iscsi/iqn.2003-01.org.linux-iscsi.osd1.x8664:sn.8888bbbbddd0/tpgt_1",
+						TpgtPath: "../testdata/fixtures/sys/kernel/config/target/iscsi/iqn.2003-01.org.linux-iscsi.osd1.x8664:sn.8888bbbbddd0/tpgt_1",
 						IsEnable: true,
 						Luns: []iscsi.LUN{
 							{
 								Name:       "lun_0",
-								LunPath:    "testdata/fixtures/sys/kernel/config/target/iscsi/iqn.2003-01.org.linux-iscsi.osd1.x8664:sn.8888bbbbddd0/tpgt_1/lun/lun_0",
+								LunPath:    "../testdata/fixtures/sys/kernel/config/target/iscsi/iqn.2003-01.org.linux-iscsi.osd1.x8664:sn.8888bbbbddd0/tpgt_1/lun/lun_0",
 								Backstore:  "rd_mcp",
 								ObjectName: "ramdisk_lio_1G",
 								TypeNumber: "119",
@@ -43,7 +43,7 @@ func TestGetStats(t *testing.T) {
 						},
 					},
 				},
-				RootPath: "testdata/fixtures/sys/kernel/config/target/iscsi",
+				RootPath: "../testdata/fixtures/sys/kernel/config/target/iscsi",
 			},
 		},
 		{
@@ -52,12 +52,12 @@ func TestGetStats(t *testing.T) {
 				Tpgt: []iscsi.TPGT{
 					{
 						Name:     "tpgt_1",
-						TpgtPath: "testdata/fixtures/sys/kernel/config/target/iscsi/iqn.2003-01.org.linux-iscsi.osd1.x8664:sn.abcd1abcd2ab/tpgt_1",
+						TpgtPath: "../testdata/fixtures/sys/kernel/config/target/iscsi/iqn.2003-01.org.linux-iscsi.osd1.x8664:sn.abcd1abcd2ab/tpgt_1",
 						IsEnable: true,
 						Luns: []iscsi.LUN{
 							{
 								Name:       "lun_0",
-								LunPath:    "testdata/fixtures/sys/kernel/config/target/iscsi/iqn.2003-01.org.linux-iscsi.osd1.x8664:sn.abcd1abcd2ab/tpgt_1/lun/lun_0",
+								LunPath:    "../testdata/fixtures/sys/kernel/config/target/iscsi/iqn.2003-01.org.linux-iscsi.osd1.x8664:sn.abcd1abcd2ab/tpgt_1/lun/lun_0",
 								Backstore:  "iblock",
 								ObjectName: "block_lio_rbd1",
 								TypeNumber: "0",
@@ -65,7 +65,7 @@ func TestGetStats(t *testing.T) {
 						},
 					},
 				},
-				RootPath: "testdata/fixtures/sys/kernel/config/target/iscsi",
+				RootPath: "../testdata/fixtures/sys/kernel/config/target/iscsi",
 			},
 		},
 		{
@@ -74,12 +74,12 @@ func TestGetStats(t *testing.T) {
 				Tpgt: []iscsi.TPGT{
 					{
 						Name:     "tpgt_1",
-						TpgtPath: "testdata/fixtures/sys/kernel/config/target/iscsi/iqn.2016-11.org.linux-iscsi.igw.x86:dev.rbd0/tpgt_1",
+						TpgtPath: "../testdata/fixtures/sys/kernel/config/target/iscsi/iqn.2016-11.org.linux-iscsi.igw.x86:dev.rbd0/tpgt_1",
 						IsEnable: true,
 						Luns: []iscsi.LUN{
 							{
 								Name:       "lun_0",
-								LunPath:    "testdata/fixtures/sys/kernel/config/target/iscsi/iqn.2016-11.org.linux-iscsi.igw.x86:dev.rbd0/tpgt_1/lun/lun_0",
+								LunPath:    "../testdata/fixtures/sys/kernel/config/target/iscsi/iqn.2016-11.org.linux-iscsi.igw.x86:dev.rbd0/tpgt_1/lun/lun_0",
 								Backstore:  "fileio",
 								ObjectName: "file_lio_1G",
 								TypeNumber: "1",
@@ -87,7 +87,7 @@ func TestGetStats(t *testing.T) {
 						},
 					},
 				},
-				RootPath: "testdata/fixtures/sys/kernel/config/target/iscsi",
+				RootPath: "../testdata/fixtures/sys/kernel/config/target/iscsi",
 			},
 		},
 		{
@@ -96,12 +96,12 @@ func TestGetStats(t *testing.T) {
 				Tpgt: []iscsi.TPGT{
 					{
 						Name:     "tpgt_1",
-						TpgtPath: "testdata/fixtures/sys/kernel/config/target/iscsi/iqn.2016-11.org.linux-iscsi.igw.x86:sn.ramdemo/tpgt_1",
+						TpgtPath: "../testdata/fixtures/sys/kernel/config/target/iscsi/iqn.2016-11.org.linux-iscsi.igw.x86:sn.ramdemo/tpgt_1",
 						IsEnable: true,
 						Luns: []iscsi.LUN{
 							{
 								Name:       "lun_0",
-								LunPath:    "testdata/fixtures/sys/kernel/config/target/iscsi/iqn.2016-11.org.linux-iscsi.igw.x86:sn.ramdemo/tpgt_1/lun/lun_0",
+								LunPath:    "../testdata/fixtures/sys/kernel/config/target/iscsi/iqn.2016-11.org.linux-iscsi.igw.x86:sn.ramdemo/tpgt_1/lun/lun_0",
 								Backstore:  "rbd",
 								ObjectName: "iscsi-images-demo",
 								TypeNumber: "0",
@@ -109,7 +109,7 @@ func TestGetStats(t *testing.T) {
 						},
 					},
 				},
-				RootPath: "testdata/fixtures/sys/kernel/config/target/iscsi",
+				RootPath: "../testdata/fixtures/sys/kernel/config/target/iscsi",
 			},
 		},
 	}
@@ -125,7 +125,7 @@ func TestGetStats(t *testing.T) {
 		{1504, 4733, 1234},
 	}
 
-	sysconfigfs, err := iscsi.NewFS("testdata/fixtures/sys", "testdata/fixtures/sys/kernel/config")
+	sysconfigfs, err := iscsi.NewFS("../testdata/fixtures/sys", "../testdata/fixtures/sys/kernel/config")
 	if err != nil {
 		t.Fatalf("failed to access xfs fs: %v", err)
 	}
diff --git a/sysfs/fs_test.go b/sysfs/fs_test.go
index ee4e147..a174f11 100644
--- a/sysfs/fs_test.go
+++ b/sysfs/fs_test.go
@@ -19,7 +19,7 @@ package sysfs
 import "testing"
 
 const (
-	sysTestFixtures = "testdata/fixtures/sys"
+	sysTestFixtures = "../testdata/fixtures/sys"
 )
 
 func TestNewFS(t *testing.T) {
diff --git a/xfs/parse_test.go b/xfs/parse_test.go
index aab5a7b..7c22c18 100644
--- a/xfs/parse_test.go
+++ b/xfs/parse_test.go
@@ -731,7 +731,7 @@ func TestParseStats(t *testing.T) {
 			stats, err = xfs.ParseStats(strings.NewReader(tt.s))
 		}
 		if tt.fs {
-			xfs, err := xfs.NewFS("testdata/fixtures/proc", "testdata/fixtures/sys")
+			xfs, err := xfs.NewFS("../testdata/fixtures/proc", "../testdata/fixtures/sys")
 			if err != nil {
 				t.Fatalf("failed to access xfs fs: %v", err)
 			}
diff --git a/xfs/xfs_test.go b/xfs/xfs_test.go
index ad9997e..76e2a8c 100644
--- a/xfs/xfs_test.go
+++ b/xfs/xfs_test.go
@@ -21,7 +21,7 @@ import (
 )
 
 func TestReadProcStat(t *testing.T) {
-	xfs, err := xfs.NewFS("testdata/fixtures/proc", "testdata/fixtures/sys")
+	xfs, err := xfs.NewFS("../testdata/fixtures/proc", "../testdata/fixtures/sys")
 	if err != nil {
 		t.Fatalf("failed to access xfs fs: %v", err)
 	}
@@ -38,7 +38,7 @@ func TestReadProcStat(t *testing.T) {
 }
 
 func TestReadSysStats(t *testing.T) {
-	xfs, err := xfs.NewFS("testdata/fixtures/proc", "testdata/fixtures/sys")
+	xfs, err := xfs.NewFS("../testdata/fixtures/proc", "../testdata/fixtures/sys")
 	if err != nil {
 		t.Fatalf("failed to access xfs fs: %v", err)
 	}
